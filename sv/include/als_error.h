#ifndef __ALI_SPEECH_ERROR_H__
#define __ALI_SPEECH_ERROR_H__

typedef int ALS_RETCODE;

const ALS_RETCODE ALS_OK = 0;
const ALS_RETCODE ALSERR_UNHANDLED_EXCEPTION = 1;

// common error code.
const ALS_RETCODE ALSERR_COMMON_BASE = 100;
const ALS_RETCODE ALSERR_OUT_OF_MEMORY = ALSERR_COMMON_BASE + 1;
const ALS_RETCODE ALSERR_FILE_NOT_FOUND = ALSERR_COMMON_BASE + 2;
const ALS_RETCODE ALSERR_DIR_OUT_FOUND = ALSERR_COMMON_BASE + 3;
const ALS_RETCODE ALSERR_INVALID_PARAMETER = ALSERR_COMMON_BASE + 4;
const ALS_RETCODE ALSERR_INVALID_PARAMETER_WINDOW_SIZE = ALSERR_COMMON_BASE + 5;
const ALS_RETCODE ALSERR_INVALID_PARAMETER_SIL2SPEECHTHRES = ALSERR_COMMON_BASE + 6;
const ALS_RETCODE ALSERR_INVALID_PARAMETER_SPEECH2SILTHRES = ALSERR_COMMON_BASE + 7;



// grammar error
const ALS_RETCODE ALSERR_GRAMMAR_BASE = 200;
const ALS_RETCODE ALSERR_UNK_GRAMMAR_TYPE = ALSERR_GRAMMAR_BASE + 1;
const ALS_RETCODE ALSERR_NOT_COMPLETE_GRAMMAR_FILES = ALSERR_GRAMMAR_BASE + 2;
const ALS_RETCODE ALSERR_UNK_GRAMMAR_ERROR = ALSERR_GRAMMAR_BASE + 3;
const ALS_RETCODE ALSERR_RELEASE_INVALID_GRAMMAR = ALSERR_GRAMMAR_BASE + 4;
const ALS_RETCODE ALSERR_UNITIALIZED_GRAMMAR = ALSERR_GRAMMAR_BASE + 5;
const ALS_RETCODE ALSERR_GRAMMAR_CONTAIN_OOV = ALSERR_GRAMMAR_BASE + 6;
const ALS_RETCODE ALSERR_GRAMMAR_BAD_RULENAME = ALSERR_GRAMMAR_BASE + 7;
const ALS_RETCODE ALSERR_GRAMMAR_COMPILE_FAIL = ALSERR_GRAMMAR_BASE + 8;
const ALS_RETCODE ALSERR_LOAD_MONO_PHONE_FAILED = ALSERR_GRAMMAR_BASE + 9;
const ALS_RETCODE ALSERR_LOAD_LEXICON_FAILED = ALSERR_GRAMMAR_BASE + 10;
const ALS_RETCODE ALSERR_LOAD_CACHE_FAILED = ALSERR_GRAMMAR_BASE + 11;
const ALS_RETCODE ALSERR_GRAMMAR_CHANGING_CRASH = ALSERR_GRAMMAR_BASE + 12;
const ALS_RETCODE ALSERR_LOAD_NOT_SHRABLE_GRRMMAR_TO_MUTIPLE_DECODER = ALSERR_GRAMMAR_BASE + 13;

// audio error
const ALS_RETCODE ALSERR_AUDIO_BASE = 300;
const ALS_RETCODE ALSERR_UNSUPPORTE_TYPE = ALSERR_AUDIO_BASE + 1;
const ALS_RETCODE ALSERR_INVALID_AUDIO_SEGMENT_TYPE = ALSERR_AUDIO_BASE + 2;



// recognizer error
const ALS_RETCODE ALSERR_RECOGNIZIER_BASE = 400;
const ALS_RETCODE ALSERR_RELEASE_INVALID_RECOGNIZER = ALSERR_RECOGNIZIER_BASE + 1;
const ALS_RETCODE ALSERR_NO_RESULT = ALSERR_RECOGNIZIER_BASE + 2;
const ALS_RETCODE ALSERR_INVALID_STATUS = ALSERR_RECOGNIZIER_BASE + 3;

// global engine
const ALS_RETCODE ALSERR_GLOBAL_ENGINE_BASE = 500;
const ALS_RETCODE ALSERR_GLOBAL_ENGINE_NO_INTIALIZED = ALSERR_GLOBAL_ENGINE_BASE + 1;
const ALS_RETCODE ALSERR_GLOBAL_ENGINE_STILL_ACTIVE_GRAMMAR= ALSERR_GLOBAL_ENGINE_BASE + 2;
const ALS_RETCODE ALSERR_GLOBAL_ENGINE_STILL_ACTIVE_RECOGNIZER = ALSERR_GLOBAL_ENGINE_BASE + 3;

// vad error
const ALS_RETCODE ALSERR_VAD_BASE = 600;
const ALS_RETCODE ALSERR_VAD_INVALID_PARAMETER_OF_WINDOW_SIZE = ALSERR_VAD_BASE + 1;
const ALS_RETCODE ALSERR_VAD_INVALID_PARAMETER_OF_SIL2SPEECHTHRES = ALSERR_VAD_BASE + 2;
const ALS_RETCODE ALSERR_VAD_INVALID_PARAMETER_OF_SPEECH2SILTHRES = ALSERR_VAD_BASE + 3;

// speaker verification error
const ALS_RETCODE ALSERR_SV_BASE = 700;
const ALS_RETCODE ALSERR_SV_SPEAKER_NOT_FOUND = ALSERR_SV_BASE + 1;
const ALS_RETCODE ALSERR_SV_INVALID_FEAT = ALSERR_SV_BASE + 2;

// punc tagger error
const ALS_RETCODE ALSERR_PUNCTAGGER_BASE = 800;
const ALS_RETCODE ALSERR_PUNCTAGGER_READ_CONFIG = ALSERR_PUNCTAGGER_BASE + 1;
const ALS_RETCODE ALSERR_PUNCTAGGER_LOAD_EMBED_FILE = ALSERR_PUNCTAGGER_BASE + 2;
const ALS_RETCODE ALSERR_PUNCTAGGER_DIM_MISMATCH = ALSERR_PUNCTAGGER_BASE + 3;
const ALS_RETCODE ALSERR_PUNCTAGGER_READ_TAG_FILE = ALSERR_PUNCTAGGER_BASE + 4;
const ALS_RETCODE ALSERR_PUNCTAGGER_READ_XNN = ALSERR_PUNCTAGGER_BASE + 5;
const ALS_RETCODE ALSERR_PUNCTAGGER_INIT = ALSERR_PUNCTAGGER_BASE + 6;
const ALS_RETCODE ALSERR_PUNCTAGGER_OUT = ALSERR_PUNCTAGGER_BASE + 7;
const ALS_RETCODE ALSERR_PUNCTAGGER_MAKE_INPUT = ALSERR_PUNCTAGGER_BASE + 8;
const ALS_RETCODE ALSERR_PUNCTAGGER_TAGGING = ALSERR_PUNCTAGGER_BASE + 9;
const ALS_RETCODE ALSERR_PUNCTAGGER_MAKE_OUTPUT = ALSERR_PUNCTAGGER_BASE + 10;

// speaker diarization error
const ALS_RETCODE ALSERR_SPK_DIAR_BASE = 900;
const ALS_RETCODE ALSERR_SPK_DIAR_SPEECH_TOO_SHORT = ALSERR_SPK_DIAR_BASE + 1;
const ALS_RETCODE ALSERR_SPK_DIAR_NOT_TWO_SPEAKER = ALSERR_SPK_DIAR_BASE + 2;
const ALS_RETCODE ALSERR_SPK_DIAR_VAD_FILE_READ_ERROR = ALSERR_SPK_DIAR_BASE + 3;

/* Win32/WinCE DLL gunk */
#if (defined(_WIN32) || defined(_WIN32_WCE)) && !defined(_WIN32_WP) && !defined(__MINGW32__) && !defined(__CYGWIN__) && !defined(__WINSCW__) && !defined(__SYMBIAN32__)
#if defined(ALSAPI_EXPORTS) /* Visual Studio */
#define ALSAPI_EXPORT __declspec(dllexport)
#else
#define ALSAPI_EXPORT __declspec(dllimport)
#endif
#else /* !_WIN32 */
#define ALSAPI_EXPORT
#endif

#endif
